name: Run Code Tests

on:
  push: {}
  pull_request: {}

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # To access previous commit for diff

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc g++ openjdk-17-jdk python3

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"

          # If empty or invalid commit SHA, fallback to first commit
          if [ -z "$BEFORE_COMMIT" ] || [ "$BEFORE_COMMIT" = "0000000000000000000000000000000000000000" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-list --max-parents=0 HEAD)
          fi

          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD)
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected. Exiting."
            exit 1
          fi

          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Determine Language
        id: determine-language
        run: |
          if echo "$CHANGED_FILES" | grep -qE '\.c$'; then
            echo "language=C" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE '\.cpp$'; then
            echo "language=C++" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE '\.py$'; then
            echo "language=Python" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE '\.java$'; then
            echo "language=Java" >> $GITHUB_ENV
          else
            echo "No supported file changes detected. Exiting."
            exit 1
          fi

      - name: Compile and Run C Tests
        if: ${{ env.language == 'C' }}
        run: |
          if [ -f Tests/test.c ]; then
            gcc Tests/test.c Solutions/*.c -o solution_c
            ./solution_c
          else
            echo "C test file Tests/test.c not found. Skipping C tests."
          fi

      - name: Compile and Run C++ Tests
        if: ${{ env.language == 'C++' }}
        run: |
          if [ -f Tests/test.cpp ]; then
            g++ -I. Tests/test.cpp Solutions/*.cpp -o solution_cpp
            ./solution_cpp
          else
            echo "C++ test file Tests/test.cpp not found. Skipping C++ tests."
          fi

      - name: Run Python Tests
        if: ${{ env.language == 'Python' }}
        run: |
          PYTHON_FILE=$(ls Solutions/*.py 2>/dev/null | head -n 1)

          if [ -z "$PYTHON_FILE" ]; then
            echo "No Python solution file found in Solutions/ directory!"
            exit 1
          fi

          echo "Running Python tests with PYTHONPATH=Solutions"
          PYTHONPATH=Solutions python3 Tests/test.py

      - name: Compile and Run Java Tests
        if: ${{ env.language == 'Java' }}
        run: |
          if [ -f Tests/test.java ]; then
            javac -d . Solutions/*.java Tests/*.java
            java test
          else
            echo "Java test file Tests/test.java not found. Skipping Java tests."
          fi
